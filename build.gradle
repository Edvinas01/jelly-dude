buildscript {
    ext {
        kotlinVersion = '1.1.1'
        ashleyVersion = '1.7.3'
        groovyVersion = '2.4.7'
        guiceVersion = '4.1.0'
        spockVersion = '1.1-groovy-2.4-rc-3'
        gdxVersion = '1.9.5'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://oss.sonatype.org/content/repositories/releases/' }
}

apply plugin: 'kotlin'
apply plugin: 'groovy'
apply plugin: 'idea'

version = '0.1'

sourceCompatibility = 1.8

project.ext.mainClassName = 'com.edd.jelly.Launcher'
project.ext.assetsDir = new File('resources');

// See:
// http://stackoverflow.com/questions/38131237/mixing-java-and-kotlin-in-gradle-project-kotlin-cannot-find-java-class
sourceSets {
    main.java.srcDirs = ['src/main/kotlin']
}

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    ignoreExitValue = true
}

task dist(type: Jar) {
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    from { configurations.compile.collect { zipTree(it) } }

    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

dist.dependsOn classes

dependencies {

    // Kotlin!
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    // Nicer fonts.
    compile "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
    compile "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"

    // Core LigGDX dependencies.
    compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
    compile "com.badlogicgames.gdx:gdx:$gdxVersion"

    // Ashley.
    compile "com.badlogicgames.ashley:ashley:$ashleyVersion"

    // Dependency injection.
    compile "com.google.inject:guice:$guiceVersion"

    // Other.
    compile 'commons-io:commons-io:2.5'

//    Still not sure which type of box2d to use... So leaving these here just in case.
//    compile files('libs/liquidfun/gdx-liquidfun-natives.jar')
//    compile files('libs/liquidfun/gdx-liquidfun.jar')

    // JBox2d + Liquid fun dependencies.
    compile files('libs/jbox2d/jbox2d-library-2.3.1-SNAPSHOT.jar')
    compile files('libs/jbox2d/jbox2d-library-2.3.1-SNAPSHOT-sources.jar')

    // Testing.
    testCompile "org.spockframework:spock-core:$spockVersion"
    testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}